// <auto-generated />
using System;
using BlocknotEF.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlocknotEF.Data.Migrations
{
    [DbContext(typeof(BlocknotDbContext))]
    [Migration("20241226155511_SeedingCities")]
    partial class SeedingCities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlocknotEF.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Yerevan"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "London"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 6,
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 7,
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 8,
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 9,
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 10,
                            Name = "Rio de Janeiro"
                        });
                });

            modelBuilder.Entity("BlocknotEF.Data.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AM",
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = 2,
                            Code = "US",
                            Name = "United States"
                        },
                        new
                        {
                            Id = 3,
                            Code = "UK",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 4,
                            Code = "FR",
                            Name = "France"
                        },
                        new
                        {
                            Id = 5,
                            Code = "DE",
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 6,
                            Code = "JP",
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 7,
                            Code = "AU",
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 8,
                            Code = "RU",
                            Name = "Russia"
                        },
                        new
                        {
                            Id = 9,
                            Code = "CN",
                            Name = "China"
                        },
                        new
                        {
                            Id = 10,
                            Code = "BR",
                            Name = "Brazil"
                        });
                });

            modelBuilder.Entity("BlocknotEF.Data.Entities.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("BlocknotEF.Data.Entities.City", b =>
                {
                    b.HasOne("BlocknotEF.Data.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BlocknotEF.Data.Entities.Record", b =>
                {
                    b.HasOne("BlocknotEF.Data.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("BlocknotEF.Data.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
